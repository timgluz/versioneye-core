class SecurityVulnerability < Versioneye::Model

  include Mongoid::Document
  include Mongoid::Timestamps

  # Belongs to the product with this attributes
  field :language, type: String
  field :prod_key, type: String

  field :name_id       , type: String # Uniq. identifier
  field :author        , type: String
  field :summary       , type: String # The summary/title of the security vulnerability
  field :description   , type: String # Description. Might be Markdown.
  field :platform      , type: String
  field :osvdb         , type: String
  field :nsp           , type: String # nodesecurity primary key
  field :cve           , type: String # CVE = Common Vulnerabilities and Exposures - https://cve.mitre.org/
  field :cves          , type: Array, default: []
  field :cwes          , type: Array, default: []
  field :cvss_v2       , type: String # The CVSSv2 score for the vulnerability. See: https://www.first.org/cvss/specification-document
  field :cvss_v3       , type: String # The CVSSv3 score for the vulnerability. See: https://www.first.org/cvss/specification-document
  field :cvss_vector   , type: String
  field :severity      , type: String
  field :publish_date  , type: String
  field :framework     , type: String
  field :source        , type: String # The vendor source db. For example victimsDB.
  field :recommendation, type: String

  field :affected_versions_string, type: String
  field :affected_versions, type: Array, default: []

  field :patched_versions_string, type: String
  field :unaffected_versions_string, type: String

  field :links, type: Hash, default: {}

  field :approved, type: Boolean, default: true

  # db.security_vulnerabilities.dropIndex( {"language": 1, "prod_key": 1, "summary": 1} )
  # index({ language: 1, prod_key: 1}, { name: "lang_prod_key_index", background: true, unique: true, drop_dups: true })
  # index({ language: 1, prod_key: 1, :name_id}, { name: "lang_prod_key_nameid_index", background: true, unique: true, drop_dups: true })

  scope :by_language   , ->(lang){where(language: lang)}
  scope :by_prod_key   , ->(prod_key){where(prod_key: prod_key)}

  def product
    Product.fetch_product language, prod_key
  end

  def self.find_by language, prod_key, name_id
    SecurityVulnerability.where(:language => language, :prod_key => prod_key, :name_id => name_id).first
  end

  def update_from svjson
    self.author       = svjson[:author]
    self.summary      = svjson[:summary]
    self.description  = svjson[:description]
    self.platform     = svjson[:platform]
    self.osvdb        = svjson[:osvdb]
    self.cve          = svjson[:cve]
    self.cvss_v2      = svjson[:cvss_v2]
    self.publish_date = svjson[:publish_date]
    self.framework    = svjson[:framework]
    self.links        = svjson[:links]
    self.affected_versions_string   = svjson[:affected_versions_string]
    self.patched_versions_string    = svjson[:patched_versions_string]
    self.unaffected_versions_string = svjson[:unaffected_versions_string]
    self.affected_versions          = svjson[:affected_versions]
    save
  end


end
